# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.catalog_item import CatalogItem

class TestCatalogItem(unittest.TestCase):
    """CatalogItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CatalogItem:
        """Test CatalogItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CatalogItem`
        """
        model = CatalogItem()
        if include_optional:
            return CatalogItem(
                info = {
                    'key' : ''
                    },
                billable_option = 'Billable',
                calculated_cost = 1.337,
                calculated_cost_flag = True,
                calculated_price = 1.337,
                calculated_price_flag = True,
                category = connectwise_psa.models.product_category_reference.ProductCategoryReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                cost = 1.337,
                custom_fields = [
                    connectwise_psa.models.custom_field_value.CustomFieldValue(
                        caption = '', 
                        entry_method = 'Date', 
                        id = 56, 
                        number_of_decimals = 56, 
                        type = 'TextArea', 
                        value = connectwise_psa.models.value.value(), )
                    ],
                customer_description = '',
                date_entered = '',
                description = '',
                drop_ship_flag = True,
                entity_type = connectwise_psa.models.entity_type_reference.EntityTypeReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                id = 56,
                identifier = '',
                inactive_flag = True,
                integration_x_ref = '',
                manufacturer = connectwise_psa.models.manufacturer_reference.ManufacturerReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                manufacturer_part_number = '',
                min_stock_level = 56,
                notes = '',
                phase_product_flag = True,
                price = 1.337,
                price_attribute = 'FixedFee',
                product_class = 'Agreement',
                recurring_bill_cycle = connectwise_psa.models.billing_cycle_reference.BillingCycleReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                recurring_cost = 1.337,
                recurring_cycle_type = 'ContractYear',
                recurring_flag = True,
                recurring_one_time_flag = True,
                recurring_revenue = 1.337,
                serialized_cost_flag = True,
                serialized_flag = True,
                sla = connectwise_psa.models.sla_reference.SLAReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                special_order_flag = True,
                subcategory = connectwise_psa.models.product_sub_category_reference.ProductSubCategoryReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                taxable_flag = True,
                type = connectwise_psa.models.product_type_reference.ProductTypeReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                unit_of_measure = connectwise_psa.models.unit_of_measure_reference.UnitOfMeasureReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                vendor = connectwise_psa.models.company_reference.CompanyReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    name = '', ),
                vendor_sku = ''
            )
        else:
            return CatalogItem(
                customer_description = '',
                description = '',
                identifier = '',
        )
        """

    def testCatalogItem(self):
        """Test CatalogItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
