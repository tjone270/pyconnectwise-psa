# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.tax_code_x_ref import TaxCodeXRef

class TestTaxCodeXRef(unittest.TestCase):
    """TaxCodeXRef unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaxCodeXRef:
        """Test TaxCodeXRef
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaxCodeXRef`
        """
        model = TaxCodeXRef()
        if include_optional:
            return TaxCodeXRef(
                info = {
                    'key' : ''
                    },
                default_flag = True,
                description = '',
                id = 56,
                level_five = 'NonTaxable',
                level_four = 'NonTaxable',
                level_one = 'NonTaxable',
                level_six = 'NonTaxable',
                level_three = 'NonTaxable',
                level_two = 'NonTaxable',
                tax_code = connectwise_psa.models.tax_code_reference.TaxCodeReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                taxable_levels = [
                    56
                    ]
            )
        else:
            return TaxCodeXRef(
                description = '',
        )
        """

    def testTaxCodeXRef(self):
        """Test TaxCodeXRef"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
