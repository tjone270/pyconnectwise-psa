# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.forecast_item import ForecastItem

class TestForecastItem(unittest.TestCase):
    """ForecastItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ForecastItem:
        """Test ForecastItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ForecastItem`
        """
        model = ForecastItem()
        if include_optional:
            return ForecastItem(
                info = {
                    'key' : ''
                    },
                bill_cycle = connectwise_psa.models.billing_cycle_reference.BillingCycleReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                catalog_item = connectwise_psa.models.iv_item_reference.IvItemReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    serialized_flag = True, ),
                cost = 1.337,
                cycle_basis = '',
                cycles = 56,
                forecast_description = '',
                forecast_type = 'Other1',
                id = 56,
                include_flag = True,
                link_flag = True,
                margin = 1.337,
                opportunity = connectwise_psa.models.opportunity_reference.OpportunityReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                percentage = 56,
                product_class = '',
                product_description = '',
                quantity = 1.337,
                quote_werks_doc_name = '',
                quote_werks_doc_no = '',
                quote_werks_quantity = 56,
                recurring_cost = 1.337,
                recurring_date_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                recurring_date_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                recurring_flag = True,
                recurring_revenue = 1.337,
                revenue = 1.337,
                sequence_number = 1.337,
                status = connectwise_psa.models.opportunity_status_reference.OpportunityStatusReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                sub_number = 56,
                taxable_flag = True
            )
        else:
            return ForecastItem(
                forecast_type = 'Other1',
        )
        """

    def testForecastItem(self):
        """Test ForecastItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
