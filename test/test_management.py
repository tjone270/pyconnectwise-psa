# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.management import Management

class TestManagement(unittest.TestCase):
    """Management unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Management:
        """Test Management
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Management`
        """
        model = Management()
        if include_optional:
            return Management(
                info = {
                    'key' : ''
                    },
                added_configuration_status = connectwise_psa.models.configuration_status_reference.ConfigurationStatusReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                deleted_configuration_status = connectwise_psa.models.configuration_status_reference.ConfigurationStatusReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                executive_summary_report_schedule_day = 56,
                executive_summary_report_schedule_hour = 56,
                executive_summary_report_schedule_minute = 56,
                id = 56,
                integrator_login = connectwise_psa.models.integrator_login_reference.IntegratorLoginReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                run_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                schedule_executive_summary_report_flag = True
            )
        else:
            return Management(
                schedule_executive_summary_report_flag = True,
        )
        """

    def testManagement(self):
        """Test Management"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
