# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.managed_devices_integration_notification import ManagedDevicesIntegrationNotification

class TestManagedDevicesIntegrationNotification(unittest.TestCase):
    """ManagedDevicesIntegrationNotification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedDevicesIntegrationNotification:
        """Test ManagedDevicesIntegrationNotification
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedDevicesIntegrationNotification`
        """
        model = ManagedDevicesIntegrationNotification()
        if include_optional:
            return ManagedDevicesIntegrationNotification(
                info = {
                    'key' : ''
                    },
                id = 56,
                log_type = 'All',
                managed_devices_integration = connectwise_psa.models.managed_devices_integration_reference.ManagedDevicesIntegrationReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                member = connectwise_psa.models.member_reference.MemberReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    name = '', ),
                notify_who = connectwise_psa.models.notification_recipient_reference.NotificationRecipientReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    name = '', )
            )
        else:
            return ManagedDevicesIntegrationNotification(
                log_type = 'All',
        )
        """

    def testManagedDevicesIntegrationNotification(self):
        """Test ManagedDevicesIntegrationNotification"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
