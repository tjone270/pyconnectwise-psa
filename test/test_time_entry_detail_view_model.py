# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.time_entry_detail_view_model import TimeEntryDetailViewModel

class TestTimeEntryDetailViewModel(unittest.TestCase):
    """TimeEntryDetailViewModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimeEntryDetailViewModel:
        """Test TimeEntryDetailViewModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimeEntryDetailViewModel`
        """
        model = TimeEntryDetailViewModel()
        if include_optional:
            return TimeEntryDetailViewModel(
                additional_expenses = [
                    connectwise_psa.models.expense_entry_pod_view_model.ExpenseEntryPodViewModel(
                        expense_entry_pod_user_defined_field_values = [
                            connectwise_psa.models.user_defined_field_value.UserDefinedFieldValue(
                                filtered = True, 
                                row_num = 56, 
                                skip_location_and_billing_unit = True, 
                                user_defined_field_rec_id = 56, 
                                value = '', )
                            ], 
                        expense_entry_widget = connectwise_psa.models.expense_entry_widget_view_model.ExpenseEntryWidgetViewModel(
                            amount = 1.337, 
                            billable = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                                id = 56, 
                                name = '', 
                                tag = '', ), 
                            class_type = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                                id = 56, 
                                name = '', 
                                tag = '', ), 
                            default_billable = , 
                            default_billable_rec_id = 56, 
                            default_classification = , 
                            default_payment_method = , 
                            expense_type = , 
                            payment_method = , ), 
                        expense_taxes = [
                            connectwise_psa.models.expense_entry_tax_view_model.ExpenseEntryTaxViewModel(
                                auto_id = 56, 
                                can_delete = True, 
                                expense_detail_rec_id = 56, 
                                expense_detail_tax_rec_id = 56, 
                                mobile_guid = '', 
                                tax_amount = 1.337, 
                                tax_type = , )
                            ], 
                        mileage_calculator_vm = connectwise_psa.models.mileage_calculator_view_model.MileageCalculatorViewModel(
                            end = 1.337, 
                            is_miles = True, 
                            is_odometer = True, 
                            miles = 1.337, 
                            start = 1.337, ), 
                        notes = '', 
                        show_expense_tax = True, )
                    ],
                audit_reason = '',
                billing_log_rec_id = 56,
                billing_model = connectwise_psa.models.time_entry_billing_options_view_model.TimeEntryBillingOptionsViewModel(
                    applied_hours = 1.337, 
                    hourly_rate = 1.337, 
                    invoice_hours = 1.337, 
                    overage_rate = 1.337, 
                    override_flag = True, 
                    total_hours = 1.337, ),
                charge_to = connectwise_psa.models.time_entry_charge_to_selection.TimeEntryChargeToSelection(
                    activity_rec_id = 56, 
                    add_notes_to_desc = True, 
                    add_notes_to_internal = True, 
                    add_notes_to_resolution = True, 
                    agr_expense_billing_options_no_default_flag = True, 
                    agr_name = '', 
                    agr_rec_id = 56, 
                    billing_option_rec_id = 56, 
                    billing_unit_name = '', 
                    billing_unit_rec_id = 56, 
                    charge_code_rec_id = 56, 
                    charge_company_id = 56, 
                    charge_company_name = '', 
                    charge_company_no_service_flag = True, 
                    charge_description = '', 
                    charge_rec_id = 56, 
                    company_address_rec_id = 56, 
                    contact_email_address = '', 
                    contact_name = '', 
                    contact_rec_id = 56, 
                    description = '', 
                    disable_successor_time = True, 
                    expense_billing_option_rec_id = 56, 
                    expense_billing_option_text = '', 
                    expense_billing_options_no_default_flag = True, 
                    owner_level_name = '', 
                    owner_level_rec_id = 56, 
                    phase_name = '', 
                    phase_rec_id = 56, 
                    project_name = '', 
                    project_rec_id = 56, 
                    rec_type = '', 
                    service_rec_id = 56, 
                    sr_member_is_resource_flag = True, 
                    sr_status_closed_flag = True, 
                    sr_status_desc = '', 
                    sr_status_no_time_flag = True, 
                    sr_status_rec_id = 56, 
                    work_role_name = '', 
                    work_role_rec_id = 56, 
                    work_type_name = '', 
                    work_type_rec_id = 56, ),
                client_time = '',
                current_user_is_manager = True,
                email_model = connectwise_psa.models.time_entry_email_view_model.TimeEntryEmailViewModel(
                    append_discussion = True, 
                    append_internal = True, 
                    append_resolution = True, 
                    cc_email_address_list = '', 
                    contact = '', 
                    contact_email_address = '', 
                    document_rec_id_list = [
                        56
                        ], 
                    from = '', 
                    from_email_address = '', 
                    from_email_address_for_resources = '', 
                    from_for_resources = '', 
                    is_to_ccs = True, 
                    is_to_contact = True, 
                    is_to_resources = True, 
                    member_rec_id = 56, 
                    no_time_entry = True, 
                    note = '', 
                    resource_email_address_list = '', 
                    resources = '', 
                    save_cc_list = True, 
                    schedule_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    schedule_done = True, 
                    sr_detail_rec_id = 56, 
                    sr_service_rec_id = 56, 
                    sr_service_status_rec_id = 56, 
                    time_rec_id = 56, ),
                exp_billable_defaulting_source = '',
                expense = connectwise_psa.models.expense_entry_pod_view_model.ExpenseEntryPodViewModel(
                    expense_entry_pod_user_defined_field_values = [
                        connectwise_psa.models.user_defined_field_value.UserDefinedFieldValue(
                            filtered = True, 
                            row_num = 56, 
                            skip_location_and_billing_unit = True, 
                            user_defined_field_rec_id = 56, 
                            value = '', )
                        ], 
                    expense_entry_widget = connectwise_psa.models.expense_entry_widget_view_model.ExpenseEntryWidgetViewModel(
                        amount = 1.337, 
                        billable = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                            id = 56, 
                            name = '', 
                            tag = '', ), 
                        class_type = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                            id = 56, 
                            name = '', 
                            tag = '', ), 
                        default_billable = , 
                        default_billable_rec_id = 56, 
                        default_classification = , 
                        default_payment_method = , 
                        expense_type = , 
                        payment_method = , ), 
                    expense_taxes = [
                        connectwise_psa.models.expense_entry_tax_view_model.ExpenseEntryTaxViewModel(
                            auto_id = 56, 
                            can_delete = True, 
                            expense_detail_rec_id = 56, 
                            expense_detail_tax_rec_id = 56, 
                            mobile_guid = '', 
                            tax_amount = 1.337, 
                            tax_type = , )
                        ], 
                    mileage_calculator_vm = connectwise_psa.models.mileage_calculator_view_model.MileageCalculatorViewModel(
                        end = 1.337, 
                        is_miles = True, 
                        is_odometer = True, 
                        miles = 1.337, 
                        start = 1.337, ), 
                    notes = '', 
                    show_expense_tax = True, ),
                history = [
                    connectwise_psa.models.history_entry.HistoryEntry(
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        history_type = 'LastLogin', 
                        member_id = '', 
                        member_name = '', 
                        time_zone_offset_display = '', )
                    ],
                invoice_closed = True,
                is_billing_context = True,
                is_pop_out = True,
                is_service_or_activity_context = True,
                iso_currency_code = '',
                last_load_time = '',
                member_current_date = '',
                no_future_records_flag = True,
                pop_out_height = 56,
                pop_out_width = 56,
                require_reason_flag = True,
                te_status_id = 56,
                time_entry_additional_details = [
                    connectwise_psa.models.time_entry_details_view_model.TimeEntryDetailsViewModel(
                        activity_end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        activity_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        billable = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                            id = 56, 
                            name = '', 
                            tag = '', ), 
                        deduct = 1.337, 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        hours = 1.337, 
                        internal_notes = '', 
                        member_time_zone_offset = 56, 
                        notes = '', 
                        notes_markdown = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_details_pod_user_defined_fields = [
                            connectwise_psa.models.user_defined_field_value.UserDefinedFieldValue(
                                filtered = True, 
                                row_num = 56, 
                                skip_location_and_billing_unit = True, 
                                user_defined_field_rec_id = 56, 
                                value = '', )
                            ], 
                        work_type = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                            id = 56, 
                            name = '', 
                            tag = '', ), )
                    ],
                time_entry_detail_model = connectwise_psa.models.time_entry_details_for_api_view_model.TimeEntryDetailsForApiViewModel(
                    billable = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                        id = 56, 
                        name = '', 
                        tag = '', ), 
                    deduct = 1.337, 
                    end_time = '', 
                    hours = 1.337, 
                    internal_notes = '', 
                    member_time_zone_offset = 56, 
                    notes = '', 
                    start_time = '', 
                    time_details_pod_user_defined_fields = [
                        connectwise_psa.models.user_defined_field_value.UserDefinedFieldValue(
                            filtered = True, 
                            row_num = 56, 
                            skip_location_and_billing_unit = True, 
                            user_defined_field_rec_id = 56, 
                            value = '', )
                        ], 
                    work_type = connectwise_psa.models.generic_name_id_dto.GenericNameIdDTO(
                        id = 56, 
                        name = '', 
                        tag = '', ), ),
                time_entry_note_size = 56,
                time_rec_id = 56,
                time_sheet_rec_id = 56,
                time_sheet_reversed_flag = True,
                time_sheet_status_id = 56
            )
        else:
            return TimeEntryDetailViewModel(
        )
        """

    def testTimeEntryDetailViewModel(self):
        """Test TimeEntryDetailViewModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
