# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.integrator_login import IntegratorLogin

class TestIntegratorLogin(unittest.TestCase):
    """IntegratorLogin unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntegratorLogin:
        """Test IntegratorLogin
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntegratorLogin`
        """
        model = IntegratorLogin()
        if include_optional:
            return IntegratorLogin(
                info = {
                    'key' : ''
                    },
                activity_api_flag = True,
                activity_callback_url = '',
                activity_legacy_callback_flag = True,
                agreement_api_flag = True,
                agreement_callback_legacy_flag = True,
                agreement_callback_url = '',
                board = connectwise_psa.models.board_reference.BoardReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                can_access_all_apis_flag = True,
                can_access_all_records_flag = True,
                company_api_flag = True,
                company_callback_url = '',
                company_legacy_callback_flag = True,
                configuration_api_flag = True,
                configuration_auto_child_flag = True,
                configuration_callback_url = '',
                configuration_childling_flag = True,
                configuration_legacy_callback_flag = True,
                contact_api_flag = True,
                contact_callback_url = '',
                contact_legacy_callback_flag = True,
                date_inactivated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                document_api_flag = True,
                id = 56,
                inactivated_by = connectwise_psa.models.member_reference.MemberReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    name = '', ),
                inactive_flag = True,
                invoice_api_flag = True,
                managed_services_api_flag = True,
                managed_services_auto_child_flag = True,
                managed_services_childing_flag = True,
                marketing_api_flag = True,
                member = connectwise_psa.models.member_reference.MemberReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    name = '', ),
                member_api_flag = True,
                opportunity_api_flag = True,
                opportunity_callback_url = '',
                opportunity_conversion_api_flag = True,
                opportunity_legacy_callback_flag = True,
                password = '',
                product_api_flag = True,
                product_callback_url = '',
                product_legacy_callback_flag = True,
                project_api_flag = True,
                project_callback_url = '',
                project_legacy_callback_flag = True,
                purchasing_api_flag = True,
                purchasing_callback_url = '',
                purchasing_legacy_callback_flag = True,
                reporting_api_flag = True,
                schedule_api_flag = True,
                schedule_callback_url = '',
                schedule_legacy_callback_flag = True,
                service_board_callback_url = '',
                service_board_legacy_callback_flag = True,
                service_ticket_api_flag = True,
                system_api_flag = True,
                time_entry_api_flag = True,
                time_entry_callback_url = '',
                time_entry_legacy_callback_flag = True,
                username = ''
            )
        else:
            return IntegratorLogin(
                username = '',
        )
        """

    def testIntegratorLogin(self):
        """Test IntegratorLogin"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
