# coding: utf-8

"""
    ConnectWise PSA

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2022.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from connectwise_psa.models.purchase_order_line_item import PurchaseOrderLineItem

class TestPurchaseOrderLineItem(unittest.TestCase):
    """PurchaseOrderLineItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PurchaseOrderLineItem:
        """Test PurchaseOrderLineItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PurchaseOrderLineItem`
        """
        model = PurchaseOrderLineItem()
        if include_optional:
            return PurchaseOrderLineItem(
                info = {
                    'key' : ''
                    },
                backordered_flag = True,
                canceled_by = '',
                canceled_flag = True,
                canceled_reason = '',
                closed_flag = True,
                custom_fields = [
                    connectwise_psa.models.custom_field_value.CustomFieldValue(
                        caption = '', 
                        entry_method = 'Date', 
                        id = 56, 
                        number_of_decimals = 56, 
                        type = 'TextArea', 
                        value = connectwise_psa.models.value.value(), )
                    ],
                date_canceled = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_canceled_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_received = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                display_internal_notes_flag = True,
                expected_ship_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = 56,
                internal_notes = '',
                line_number = 56,
                packing_slip = '',
                product = connectwise_psa.models.iv_item_reference.IvItemReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    identifier = '', 
                    serialized_flag = True, ),
                purchase_order_id = 56,
                quantity = 1.337,
                received_quantity = 56,
                received_status = 'Waiting',
                serial_numbers = '',
                ship_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ship_set = '',
                shipment_method = connectwise_psa.models.shipment_method_reference.ShipmentMethodReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                tax = 1.337,
                tracking_number = '',
                unit_cost = 1.337,
                unit_of_measure = connectwise_psa.models.unit_of_measure_reference.UnitOfMeasureReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', ),
                vendor_order_number = '',
                vendor_sku = '',
                warehouse = connectwise_psa.models.warehouse_reference.WarehouseReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    locked_flag = True, 
                    name = '', ),
                warehouse_bin = connectwise_psa.models.warehouse_bin_reference.WarehouseBinReference(
                    _info = {
                        'key' : ''
                        }, 
                    id = 56, 
                    name = '', )
            )
        else:
            return PurchaseOrderLineItem(
                description = '',
                line_number = 56,
                quantity = 1.337,
        )
        """

    def testPurchaseOrderLineItem(self):
        """Test PurchaseOrderLineItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
